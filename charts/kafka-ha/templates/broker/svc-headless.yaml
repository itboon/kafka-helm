{{- $component := "broker" }}
{{- $svcValues := .Values.broker.headlessService | default dict }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kafka.broker.headless.serviceName" $ }}
  namespace: {{ include "kafka.namespace" $ }}
  labels:
    {{- include "kafka.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $component | quote }}
  {{- with $svcValues.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
  {{- with $svcValues.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if eq (include "broker.externalDns.enabled" $) "true" }}
  {{- $validExternalType := list "PodIP" "NodePort" "HostPort" }}
  {{- $externalType := $.Values.broker.external.type }}
  {{- if has $externalType $validExternalType }}
    {{- $hostname := printf "%s.%s" (include "broker.externalDns.hostnamePrefix" $) (include "broker.externalDns.domain" $) }}
    external-dns.alpha.kubernetes.io/hostname: {{ $hostname | quote }}
    {{- if or (eq $externalType "NodePort") (eq $externalType "HostPort") }}
    external-dns.alpha.kubernetes.io/endpoints-type: HostIP
    {{- end }}
    {{- with $.Values.broker.external.externalDns.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
  {{- end }}
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: {{ $.Values.broker.containerPort }}
      targetPort: broker
      protocol: TCP
      name: broker
    - port: {{ $.Values.controller.containerPort }}
      targetPort: controller
      protocol: TCP
      name: controller
  selector:
    {{- include "kafka.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $component | quote }}